CREATE TABLE USERS
(
    ID         SERIAL PRIMARY KEY,
    GUID       UUID        DEFAULT gen_random_uuid() NOT NULL UNIQUE, -- using int as primary key for better searcH
    USERNAME   VARCHAR(50) UNIQUE                    NOT NULL,
    PASSWORD   VARCHAR(255) UNIQUE                   NOT NULL,
    NAME       VARCHAR(255)                          NOT NULL,
    EMAIL      VARCHAR(64),
    ROLE       VARCHAR(10) DEFAULT 'USER'            NOT NULL,
    CREATED_AT DATE        DEFAULT CURRENT_DATE      NOT NULL
);

CREATE TABLE PROJECTS
(
    ID          SERIAL PRIMARY KEY,
    GUID        UUID         NOT NULL UNIQUE,
    NAME        VARCHAR(255) NOT NULL,
    SHORT_NAME  VARCHAR(20)  NOT NULL,
    TYPE        VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT, --DONT THINK WE NEED THIS
    CREATED_AT  DATE DEFAULT CURRENT_DATE,
    OWNER_ID    UUID         NOT NULL
);


CREATE TABLE BOARDS
(
    ID          SERIAL PRIMARY KEY,
    NAME        VARCHAR(255) NOT NULL,
    PROJECT_ID  UUID         NOT NULL,
    DESCRIPTION TEXT,

    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (GUID)
);

CREATE TABLE TASKS
(
    ID                VARCHAR(255) NOT NULL PRIMARY KEY, -- PrjectShortNAme-int
    TITLE             VARCHAR(255) NOT NULL,
    DESCRIPTION       TEXT         NOT NULL,
    ASSIGNEE          UUID,
    STATUS            VARCHAR(50)  NOT NULL,
    TASK_TYPE_ID      VARCHAR(50)  NOT NULL,
    PRIORITY          VARCHAR(50)  NOT NULL,
    STORY_POINTS      NUMERIC(3, 1),
    ESTIMATE_DAYS     INT,
    ESTIMATE_MINUTES  INT,
    BOARD_ID          INT          NOT NULL,
    GLOBAL_SORT_INDEX INT,
    PARENT_ID         VARCHAR(255),
    PROJECT_ID        UUID         NOT NULL,
    CREATED_BY        UUID         NOT NULL,
    CREATED_AT        DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (GUID),
    FOREIGN KEY (ASSIGNEE) REFERENCES USERS (GUID)
);

CREATE TABLE BOARD_TASKS
(
    ID         SERIAL PRIMARY KEY,
    TASK_ID    VARCHAR(255) NOT NULL,
    BOARD_ID   INT          NOT NULL,
    SORT_INDEX INT          NOT NULL,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID),
    FOREIGN KEY (BOARD_ID) REFERENCES BOARDS (ID)
);


-- to keep track of the max number for id (prefix-number)
CREATE TABLE ID_TRACK
(
    PREFIX     VARCHAR(50) NOT NULL UNIQUE,
    MAX_NUMBER INT         NOT NULL
);

CREATE TABLE COMMENTS
(
    ID         SERIAL PRIMARY KEY,
    CONTENT    TEXT         NOT NULL,
    AUTHOR     UUID         NOT NULL,
    TASK_ID    VARCHAR(255) NOT NULL,
    STATUS     VARCHAR(50) DEFAULT 'DRAFT',
    CREATED_AT DATE        DEFAULT CURRENT_DATE,

    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID)
);


CREATE TABLE RECENT_BOARDS
(
    ID         SERIAL,
    USER_ID    UUID NOT NULL,
    BOARD_ID   INT  NOT NULL,
    PROJECT_ID UUID NOT NULL, -- there can be only one board_id for each project_id per user_id

    FOREIGN KEY (USER_ID) REFERENCES USERS (GUID),
    FOREIGN KEY (BOARD_ID) REFERENCES BOARDS (ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (GUID)
);

CREATE TABLE BOARD_COLUMNS
(
    ID         SERIAL PRIMARY KEY,
    BOARD_ID   INT         NOT NULL,
    NAME       VARCHAR(50) NOT NULL,
    SORT_INDEX INT         NOT NULL,
    FOREIGN KEY (BOARD_ID) REFERENCES BOARDS (ID)
);

CREATE TABLE PROJECT_MEMBERS
(
    USER_ID    UUID    NOT NULL,
    PROJECT_ID INTEGER NOT NULL,

    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS (GUID)
);
